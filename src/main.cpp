// Copyright 2021 by mila

/*
Разработать систему имитационного моделирования "Океан". Моделируется замкнутая экологическая система по принципу хищник-жертва.

Имитационное моделирование в данном случае предполагает, что мы не используем математические модели, формулы, а получаем результаты моделирования на основе случайного взаимодействия объектов в океане.

В системе рассматриваются сущности:
*/

/*
На начальном этапе необходимо разработать классы для основных сущностей. Океан выступает контейнером для ячеек, ячейка является контейнером для объектов. Все объекты объединяются в коллекцию (вектор или список) и океан управляет всеми объектами через цикл (подобно управлению работниками в предыдущей лабораторной работе). Океан посылает всем объектам сообщение live(), и каждый объект ведет себя в соответствии с заданным алгоритмом.

Рассылка сообщений должна производиться именно по списку, а не по позиции ячейки в океане. Это гарантирует независимость порядка порядка поступления сообщения от позиции в океане.


*/
/*
В результате "жизнедеятельности" объектов в океане происходят следующие события:

живые объекты хаотично перемещаются в соседние ячейки;
живые объекты размножаются, питаются и умирают;
Моделирование продолжается до тех пор, пока:

пользователь не прерывает процесс;
в океане заканчивается пища - объекты Prey;
в океане заканчиваются хищники - объекты Predators;

*/

/*
Результаты моделирования
В начале в океан загружаются параметры всех объектов и случайным образом помещаются объекты (количество указывается в параметрах). После этого включается основной цикл и далее возможны три исхода:

Смерть хищников. Добыча заполняет все доступное пространство океана.
Смерть добычи. Хищники размножаются, но потом неизбежно умирают с голода. Океан пустеет.
Колебания численности. Число хищников и жертв колеблется по гармоническому закону. Это самый предпочтительный вариант.

*/

/*
Консольная версия
Каждый объект в океане отображается на экране определенным символом. Моделирование предполагает случайное распределение в океане заданного количества камней, жерт и хищников (начальное состояние) и пошаговое изменение состояния океана. Все объекты в течении шага делают свой ход. После этого на экран выводится карта океана и процесс зацикливается.

На приведенном скриншоте показана i-ая итерация океана. Жерты обозначены символом 'f', хищники - 'S'. Видно, что количество жертв существенно больше числа хищников, что создает для последних благоприятные условия для питания и размножения. На экране отображается порядка 5000 объектов.

*/

/*
common.h - общие макросы, заголовки глобальных функций
cell.h,cell.cpp - класс Cell - ячейка
stone.h,stone.cpp - класс Stone - скала
prey.h,prey.cpp - класс Prey - жертва
predator.h,predator.cpp - класс Predator - хищник
ocean.h,ocean.cpp - класс Ocean - океан
main.cpp - создание и запуск океана
img/screenshot.png - скриншот главного окна океана
*/
